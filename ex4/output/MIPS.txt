.data
string_access_violation: .asciiz "Access Violation"
string_illegal_div_by_0: .asciiz "Division By Zero"
string_invalid_ptr_dref: .asciiz "Invalid Pointer Dereference"
max: .word 32767
min: .word -32768
.text
abort_pointer:
	la $a0, string_invalid_ptr_dref
	li $v0,4
	syscall
	li $v0,10
	syscall
.text
abort_array:
	la $a0, string_access_violation
	li $v0,4
	syscall
	li $v0,10
	syscall
.data
	global_s1:
	 .asciiz "Having"
.data
	global_s2:
	 .asciiz "said"
.data
	global_s3:
	 .asciiz "that"
.text
main:
	subu $sp,$sp,4
	sw $ra,0($sp)
	subu $sp,$sp,4
	sw $fp,0($sp)
	move $fp, $sp
	subu $sp,$sp,4
	li $t0, 3
	addi $a0,$t0,1
	sll $a0,$a0,2
	li $v0,9
	syscall
	move $t1, $v0
	sw $t0, 0($t1)
	sw $t1, -4($fp)
	lw $t4,global_s1
	lw $t1, -4($fp)
	li $t0, 0
	subu $sp,$sp,4
	sw $s0,0($sp)
	bltz $t0,abort_array
	lw $s0, 0($t1)
	bge $t0,$s0,abort_array
	move $s0, $t0
	add $s0,$s0,1
	mul $s0,$s0,4
	add $s0,$t1,$s0
	sw $t4, 0($s0)
	lw $s0,0($sp)
	addu $sp,$sp,4
.data
	Label_0_Citroen:
	 .asciiz "Citroen"
.text
	la $t0, Label_0_Citroen
	lw $t0,global_s2
	subu $sp,$sp,4
	sw $s0,0($sp)
	subu $sp,$sp,4
	sw $s1,0($sp)
	subu $sp,$sp,4
	sw $s2,0($sp)
	subu $sp,$sp,4
	sw $s3,0($sp)
	li $s0, 0
	move $s2, $t0
Label_1_first_loop:
	lb $s3, 0($s2)
	beqz $s3,Label_2_end_first_loop
	addu $s0,$s0,1
	addu $s2,$s2,1
	j Label_1_first_loop
Label_2_end_first_loop:
	move $s2, $t0
Label_3_second_loop:
	lb $s3, 0($s2)
	beqz $s3,Label_4_end_second_loop
	addu $s0,$s0,1
	addu $s2,$s2,1
	j Label_3_second_loop
Label_4_end_second_loop:
	addu $a0,$s0,1
	li $v0,9
	syscall
	move $s2, $v0
	move $s0, $t0
	move $s1, $t0
Label_5_assign_first:
	lb $s3, 0($s0)
	beqz $s3,Label_6_assign_second
	sb $s3, 0($s2)
	addu $s0,$s0,1
	addu $s2,$s2,1
	j Label_5_assign_first
Label_6_assign_second:
	lb $s3, 0($s1)
	beqz $s3,Label_7_end_label
	sb $s3, 0($s2)
	addu $s1,$s1,1
	addu $s2,$s2,1
	j Label_6_assign_second
Label_7_end_label:
	sb $zero, 0($s2)
	move $t3, $v0
	lw $s3,0($sp)
	addu $sp,$sp,4
	lw $s2,0($sp)
	addu $sp,$sp,4
	lw $s1,0($sp)
	addu $sp,$sp,4
	lw $s0,0($sp)
	addu $sp,$sp,4
	lw $t1, -4($fp)
	li $t0, 1
	subu $sp,$sp,4
	sw $s0,0($sp)
	bltz $t0,abort_array
	lw $s0, 0($t1)
	bge $t0,$s0,abort_array
	move $s0, $t0
	add $s0,$s0,1
	mul $s0,$s0,4
	add $s0,$t1,$s0
	sw $t3, 0($s0)
	lw $s0,0($sp)
	addu $sp,$sp,4
	lw $t0,global_s1
.data
	Label_8_said:
	 .asciiz "said"
.text
	la $t0, Label_8_said
	lw $t0,global_s3
	subu $sp,$sp,4
	sw $s0,0($sp)
	subu $sp,$sp,4
	sw $s1,0($sp)
	subu $sp,$sp,4
	sw $s2,0($sp)
	subu $sp,$sp,4
	sw $s3,0($sp)
	li $s0, 0
	move $s2, $t0
Label_9_first_loop:
	lb $s3, 0($s2)
	beqz $s3,Label_10_end_first_loop
	addu $s0,$s0,1
	addu $s2,$s2,1
	j Label_9_first_loop
Label_10_end_first_loop:
	move $s2, $t0
Label_11_second_loop:
	lb $s3, 0($s2)
	beqz $s3,Label_12_end_second_loop
	addu $s0,$s0,1
	addu $s2,$s2,1
	j Label_11_second_loop
Label_12_end_second_loop:
	addu $a0,$s0,1
	li $v0,9
	syscall
	move $s2, $v0
	move $s0, $t0
	move $s1, $t0
Label_13_assign_first:
	lb $s3, 0($s0)
	beqz $s3,Label_14_assign_second
	sb $s3, 0($s2)
	addu $s0,$s0,1
	addu $s2,$s2,1
	j Label_13_assign_first
Label_14_assign_second:
	lb $s3, 0($s1)
	beqz $s3,Label_15_end_label
	sb $s3, 0($s2)
	addu $s1,$s1,1
	addu $s2,$s2,1
	j Label_14_assign_second
Label_15_end_label:
	sb $zero, 0($s2)
	move $t0, $v0
	lw $s3,0($sp)
	addu $sp,$sp,4
	lw $s2,0($sp)
	addu $sp,$sp,4
	lw $s1,0($sp)
	addu $sp,$sp,4
	lw $s0,0($sp)
	addu $sp,$sp,4
	subu $sp,$sp,4
	sw $s0,0($sp)
	subu $sp,$sp,4
	sw $s1,0($sp)
	subu $sp,$sp,4
	sw $s2,0($sp)
	subu $sp,$sp,4
	sw $s3,0($sp)
	li $s0, 0
	move $s2, $t0
Label_16_first_loop:
	lb $s3, 0($s2)
	beqz $s3,Label_17_end_first_loop
	addu $s0,$s0,1
	addu $s2,$s2,1
	j Label_16_first_loop
Label_17_end_first_loop:
	move $s2, $t0
Label_18_second_loop:
	lb $s3, 0($s2)
	beqz $s3,Label_19_end_second_loop
	addu $s0,$s0,1
	addu $s2,$s2,1
	j Label_18_second_loop
Label_19_end_second_loop:
	addu $a0,$s0,1
	li $v0,9
	syscall
	move $s2, $v0
	move $s0, $t0
	move $s1, $t0
Label_20_assign_first:
	lb $s3, 0($s0)
	beqz $s3,Label_21_assign_second
	sb $s3, 0($s2)
	addu $s0,$s0,1
	addu $s2,$s2,1
	j Label_20_assign_first
Label_21_assign_second:
	lb $s3, 0($s1)
	beqz $s3,Label_22_end_label
	sb $s3, 0($s2)
	addu $s1,$s1,1
	addu $s2,$s2,1
	j Label_21_assign_second
Label_22_end_label:
	sb $zero, 0($s2)
	move $t2, $v0
	lw $s3,0($sp)
	addu $sp,$sp,4
	lw $s2,0($sp)
	addu $sp,$sp,4
	lw $s1,0($sp)
	addu $sp,$sp,4
	lw $s0,0($sp)
	addu $sp,$sp,4
	lw $t1, -4($fp)
	li $t0, 2
	subu $sp,$sp,4
	sw $s0,0($sp)
	bltz $t0,abort_array
	lw $s0, 0($t1)
	bge $t0,$s0,abort_array
	move $s0, $t0
	add $s0,$s0,1
	mul $s0,$s0,4
	add $s0,$t1,$s0
	sw $t2, 0($s0)
	lw $s0,0($sp)
	addu $sp,$sp,4
	lw $t1, -4($fp)
	li $t0, 2
	subu $sp,$sp,4
	sw $s0,0($sp)
	bltz $t0,abort_array
	lw $s0, 0($t1)
	bge $t0,$s0,abort_array
	addi $s0,$t0,1
	sll $s0,$s0,2
	add $s0,$t1,$s0
	lw $t0, 0($s0)
	lw $s0,0($sp)
	addu $sp,$sp,4
	move $a0, $t0
	li $v0,4
	syscall
	move $sp, $fp
	lw $fp,0($sp)
	addu $sp,$sp,4
	lw $ra,0($sp)
	addu $sp,$sp,4
	jr $ra
	li $v0,10
	syscall
